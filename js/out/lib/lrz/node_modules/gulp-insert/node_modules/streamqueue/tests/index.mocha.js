var assert=require("assert"),es=require("event-stream"),StreamQueue=require("../src"),PlatformStream=require("stream"),Stream=require("readable-stream");[PlatformStream,Stream].slice(PlatformStream.Readable?0:1).forEach(function(e){function t(e,n){return n.length?(e.write(n.shift()),t(e,n)):e.end(),e}function n(e,t){return t.length?setImmediate(function(){e.write(t.shift()),n(e,t)}):e.end(),e}function r(t){var n=new e.Readable;return n._read=function(){t.length&&setImmediate(function(){n.push(t.shift()),t.length||n.push(null)})},n.resume(),n}function i(t){var n=new e.PassThrough;return setImmediate(function(){n.emit("error",new Error(t)),n.end()}),n}describe("StreamQueue",function(){describe("in binary mode",function(){describe("and with async streams",function(){it("should work with functionnal API",function(t){StreamQueue(n(new e.PassThrough,["wa","dup"]),n(new e.PassThrough,["pl","op"]),n(new e.PassThrough,["ki","koo","lol"])).pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()}))}),it("should work with functionnal API and options",function(t){StreamQueue({pause:!0},n(new e.PassThrough,["wa","dup"]),n(new e.PassThrough,["pl","op"]),n(new e.PassThrough,["ki","koo","lol"])).pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()}))}),it("should work with POO API",function(t){var r=new StreamQueue;r.queue(n(new e.PassThrough,["wa","dup"])),r.queue(n(new e.PassThrough,["pl","op"])),r.queue(n(new e.PassThrough,["ki","koo","lol"])),assert.equal(r.length,3),r.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),r.done()}),it("should pause streams in flowing mode",function(t){var i=new StreamQueue({pauseFlowingStream:!0,resumeFlowingStream:!0});i.queue(r(["wa","dup"])),i.queue(n(new e.PassThrough,["pl","op"])),i.queue(n(new e.PassThrough,["ki","koo","lol"])),assert.equal(i.length,3),i.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),i.done()}),it("should work with POO API and options",function(t){var r=new StreamQueue({pauseFlowingStream:!0,resumeFlowingStream:!0});r.queue(n(new e.PassThrough,["wa","dup"])),r.queue(n(new e.PassThrough,["pl","op"])),r.queue(n(new e.PassThrough,["ki","koo","lol"])),assert.equal(r.length,3),r.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),r.done()}),it("should work with POO API and a late done call",function(t){var r=new StreamQueue;r.queue(n(new e.PassThrough,["wa","dup"])),r.queue(n(new e.PassThrough,["pl","op"])),r.queue(n(new e.PassThrough,["ki","koo","lol"])),assert.equal(r.length,3),r.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),setTimeout(function(){r.done()},100)}),it("should reemit errors",function(t){var r=!1,s=new StreamQueue;s.queue(i("Aouch!")),s.queue(n(new e.PassThrough,["wa","dup"])),s.queue(n(new e.PassThrough,["pl","op"])),s.queue(n(new e.PassThrough,["ki","koo","lol"])),assert.equal(s.length,4),s.on("error",function(e){r=!0}),s.pipe(es.wait(function(e,n){assert(r),assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),s.done()})}),describe("and with sync streams",function(){it("should work with functionnal API",function(n){StreamQueue(t(new e.PassThrough,["wa","dup"]),t(new e.PassThrough,["pl","op"]),t(new e.PassThrough,["ki","koo","lol"])).pipe(es.wait(function(e,t){assert.equal(e,null),assert.equal(t,"wadupplopkikoolol"),n()}))}),it("should work with POO API",function(n){var r=new StreamQueue;r.queue(t(new e.PassThrough,["wa","dup"])),r.queue(t(new e.PassThrough,["pl","op"])),r.queue(t(new e.PassThrough,["ki","koo","lol"])),assert.equal(r.length,3),r.pipe(es.wait(function(e,t){assert.equal(e,null),assert.equal(t,"wadupplopkikoolol"),n()})),r.done()}),it("should emit an error when calling done twice",function(n){var r=new StreamQueue;r.queue(t(new e.PassThrough,["wa","dup"])),r.queue(t(new e.PassThrough,["pl","op"])),r.queue(t(new e.PassThrough,["ki","koo","lol"])),assert.equal(r.length,3),r.pipe(es.wait(function(e,t){assert.equal(e,null),assert.equal(t,"wadupplopkikoolol"),n()})),r.done(),assert.throws(function(){r.done()})}),it("should emit an error when queueing after done was called",function(n){var r=new StreamQueue;r.queue(t(new e.PassThrough,["wa","dup"])),r.queue(t(new e.PassThrough,["pl","op"])),r.queue(t(new e.PassThrough,["ki","koo","lol"])),assert.equal(r.length,3),r.pipe(es.wait(function(e,t){assert.equal(e,null),assert.equal(t,"wadupplopkikoolol"),n()})),r.done(),assert.throws(function(){r.queue(new e.PassThrough)})}),it("should reemit errors",function(n){var r=!1,s=new StreamQueue;s.queue(i("Aouch!")),s.queue(t(new e.PassThrough,["wa","dup"])),s.queue(t(new e.PassThrough,["pl","op"])),s.queue(t(new e.PassThrough,["ki","koo","lol"])),assert.equal(s.length,4),s.on("error",function(e){r=!0,assert.equal(e.message,"Aouch!")}),s.pipe(es.wait(function(e,t){assert(r),assert.equal(e,null),assert.equal(t,"wadupplopkikoolol"),n()})),s.done()})}),describe("and with functions returning streams",function(){it("should work with functionnal API",function(t){StreamQueue(function(){return n(new e.PassThrough,["wa","dup"])},function(){return n(new e.PassThrough,["pl","op"])},function(){return n(new e.PassThrough,["ki","koo","lol"])}).pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()}))}),it("should work with functionnal API and options",function(t){var r=new e.PassThrough,i=new e.PassThrough,s=new e.PassThrough;StreamQueue({pause:!0},function(){return n(new e.PassThrough,["wa","dup"])},function(){return n(new e.PassThrough,["pl","op"])},function(){return n(new e.PassThrough,["ki","koo","lol"])}).pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()}))}),it("should work with POO API",function(t){var r=new StreamQueue;r.queue(function(){return n(new e.PassThrough,["wa","dup"])}),r.queue(function(){return n(new e.PassThrough,["pl","op"])}),r.queue(function(){return n(new e.PassThrough,["ki","koo","lol"])}),assert.equal(r.length,3),r.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),r.done()}),it("should pause streams in flowing mode",function(t){var i=new StreamQueue({pauseFlowingStream:!0,resumeFlowingStream:!0});i.queue(function(){return r(["wa","dup"])}),i.queue(function(){return n(new e.PassThrough,["pl","op"])}),i.queue(function(){return n(new e.PassThrough,["ki","koo","lol"])}),assert.equal(i.length,3),i.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),i.done()}),it("should work with POO API and options",function(t){var r=new StreamQueue({pauseFlowingStream:!0,resumeFlowingStream:!0});r.queue(function(){return n(new e.PassThrough,["wa","dup"])}),r.queue(function(){return n(new e.PassThrough,["pl","op"])}),r.queue(function(){return n(new e.PassThrough,["ki","koo","lol"])}),assert.equal(r.length,3),r.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),r.done()}),it("should work with POO API and a late done call",function(t){var r=new StreamQueue;r.queue(function(){return n(new e.PassThrough,["wa","dup"])}),r.queue(function(){return n(new e.PassThrough,["pl","op"])}),r.queue(function(){return n(new e.PassThrough,["ki","koo","lol"])}),assert.equal(r.length,3),r.pipe(es.wait(function(e,n){assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),setTimeout(function(){r.done()},100)}),it("should reemit errors",function(t){var r=!1,s=new StreamQueue;s.queue(i("Aouch!")),s.queue(function(){return n(new e.PassThrough,["wa","dup"])}),s.queue(function(){return n(new e.PassThrough,["pl","op"])}),s.queue(function(){return n(new e.PassThrough,["ki","koo","lol"])}),assert.equal(s.length,4),s.on("error",function(e){r=!0}),s.pipe(es.wait(function(e,n){assert(r),assert.equal(e,null),assert.equal(n,"wadupplopkikoolol"),t()})),s.done()})})}),describe("in object mode",function(){var t=[];it("should work",function(r){var i=new StreamQueue({objectMode:!0});i.queue(n(new e.PassThrough({objectMode:!0}),[{s:"wa"},{s:"dup"}])),i.queue(n(new e.PassThrough({objectMode:!0}),[{s:"pl"},{s:"op"}])),i.queue(n(new e.PassThrough({objectMode:!0}),[{s:"ki"},{s:"koo"},{s:"lol"}])),i.on("data",t.push.bind(t)),i.pipe(es.wait(function(e,n){assert.equal(e,null),assert.deepEqual(t,[{s:"wa"},{s:"dup"},{s:"pl"},{s:"op"},{s:"ki"},{s:"koo"},{s:"lol"}]),r()})),i.done()})})})});